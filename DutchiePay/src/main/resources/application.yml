host:
  backend: ${BACKEND_HOST}
  frontend: ${FRONTEND_HOST}

spring:
  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            client-name: kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - account_email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_REDIRECT_URI}
            client-name: Naver
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - email
              - mobile
  sms:
    api-key: ${SMS_API_KEY}
    api-secret: ${SMS_API_SECRET}
    provider: https://api.coolsms.co.kr
    sender: ${SMS_SENDER}

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}

  jpa:
    database: mysql
    open-in-view: false
    generate-ddl: false
    hibernate:
      ddl-auto: none # 필요 시 create으로 변경 (컬럼 타입명 변경 등)
    show-sql: true
    properties:
      hibernate:
        jdbc:
          batch_size: 1000
        order_updates: true
        order_inserts: true
        show_sql: true
  cors:
    allowed-origins: ${CORS_ORIGIN}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  jackson:
    time-zone: Asia/Seoul

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: /swagger
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: alpha
  api-docs:
    groups:
      enabled: true

jwt:
  secret:
    access:
      key: ${JWT_ACCESS_KEY}
    refresh:
      key: ${JWT_REFRESH_KEY}
  access:
    token:
      expiration: 1800000  # 30분
  refresh:
    token:
      expiration: 604800000  # 7일

cloud:
  aws:
    s3:
      bucket: ${AWS_S3_BUCKET}
    stack:
      auto: false
    region:
      static: ap-northeast-2
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}

payment:
  kakao:
    cid: ${KAKAO_PAY_CID}
    secret: ${KAKAO_PAY_SECRET}
  portone:
    secret: ${PORTONE_API_SECRET}
    store-id: ${PORTONE_STORE_ID}